"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[135],{9818:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var o=s(7458),n=s(4326);const a={title:"Modules",sidebar_position:1},i=void 0,d={id:"misc/modules",title:"Modules",description:"CrossBuild is built off of a modular system. This means that you can add and remove modules as you please to connect to different services for your bot.",source:"@site/docs/misc/modules.mdx",sourceDirName:"misc",slug:"/misc/modules",permalink:"/docs/misc/modules",draft:!1,unlisted:!1,editUrl:"https://github.com/crossbuild/crossbuildjs/tree/main/apps/website/docs/docs/misc/modules.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Modules",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Options",permalink:"/docs/creating-your-bot/options"}},r={},c=[{value:"Module Structure",id:"module-structure",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"CrossBuild is built off of a modular system. This means that you can add and remove modules as you please to connect to different services for your bot."}),"\n",(0,o.jsxs)(t.p,{children:["Our in-house modules are all open source and can be found on our ",(0,o.jsx)(t.a,{href:"https://github.com/crossbuildjs/crossbuild/tree/main/packages",children:"GitHub"}),", and anyone is able to create their own modules to use with CrossBuild."]}),"\n",(0,o.jsx)(t.h2,{id:"module-structure",children:"Module Structure"}),"\n",(0,o.jsx)(t.p,{children:"Modules, at their core, are just packages that extend a set of abstract classes that are provided by CrossBuild. These abstract classes provide a set of methods that are used to interact with the bot, and the bot will call these methods when it needs to interact with the module."}),"\n",(0,o.jsxs)(t.p,{children:["For example, the ",(0,o.jsx)(t.a,{href:"/api/core/class/Channel",children:(0,o.jsx)(t.code,{children:"Channel"})})," class has a method called ",(0,o.jsx)(t.code,{children:"send"})," that is used to send a message to a channel. When the bot needs to send a message to a channel, it will call the ",(0,o.jsx)(t.code,{children:"send"})," method on the channel object that is passed to it."]}),"\n",(0,o.jsx)(t.p,{children:"The module can then implement this method to send a message to the channel."}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(t.p,{children:["If you would like to see an example of a module, you can check out the ",(0,o.jsx)(t.a,{href:"https://github.com/crossbuildjs/crossbuild/tree/main/packages/guilded",children:"Guilded module"}),", which is the module that is used to connect to ",(0,o.jsx)(t.a,{href:"https://guilded.gg",children:"Guilded"}),"'s API"]})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},4326:(e,t,s)=>{s.d(t,{Z:()=>d,a:()=>i});var o=s(2983);const n={},a=o.createContext(n);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);